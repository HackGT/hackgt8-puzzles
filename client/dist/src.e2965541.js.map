{"version":3,"sources":["index.js"],"names":["faqs","document","querySelectorAll","faq","question","querySelector","answer","chevron","addEventListener","classList","toggle","formatDate","date","appendLeadingZeroes","n","console","log","toString","ampm","getHours","formatted_date","getFullYear","getMonth","getDate","getMinutes","getSeconds","getLeaderboard","axios","get","headers","then","response","leaderboard_container","table","rows","data","users","map","row","index","rowElement","createElement","rankElement","textContent","appendChild","nameElement","displayname","pointElement","points","length","innerHTML","outerHTML","join","catch","error","getUserStatus","user","puzzlesCompleted","puzzleElement","linkElement","href","puzzle","host","title","dateElement","Date","user_field","user_points_field","name","window","onload"],"mappings":"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","file":"src.e2965541.js","sourceRoot":"../src","sourcesContent":["const faqs = document.querySelectorAll(\".faq\");\n\nfor (const faq of faqs) {\n  const question = faq.querySelector(\".question\");\n  const answer = faq.querySelector(\".answer\");\n  const chevron = question.querySelector(\"i\");\n  question.addEventListener(\"click\", () => {\n    answer.classList.toggle(\"hide\");\n    chevron.classList.toggle(\"gg-chevron-down\");\n  });\n}\n\nfunction formatDate(date) {\n  function appendLeadingZeroes(n){\n    if(n <= 9){\n      return \"0\" + n;\n    }\n    return n\n  }\n  \n\n  console.log(date.toString());\n  var ampm = date.getHours() >= 12 ? 'PM' : 'AM';\n  let formatted_date = date.getFullYear() + \"-\" + \n                                        appendLeadingZeroes(date.getMonth() + 1) + \"-\" + \n                                        appendLeadingZeroes(date.getDate()) + \" \" + \n                                        appendLeadingZeroes(date.getHours()) + \":\" + \n                                        appendLeadingZeroes(date.getMinutes()) + \":\" + \n                                        appendLeadingZeroes(date.getSeconds()) + \" \" +\n                                        ampm;\n  console.log(formatted_date);\n  return formatted_date;\n\n}\nfunction getLeaderboard() {\n  axios.get(\n    \"http://localhost:3000/leaderboard\",\n    {\n      headers: {'Access-Control-Allow-Origin': '*'}\n    }\n  ).then((response) => {\n    const leaderboard_container = document.querySelector(\"#leaderboard-table\");\n    const table = document.querySelector(\"#leaderboard-data\");\n    console.log(response);\n    const rows = response.data.data.users.map((row, index) => {\n      const rowElement = document.createElement(\"tr\");\n      const rankElement = document.createElement(\"td\");\n      rankElement.textContent = index + 1;\n      rowElement.appendChild(rankElement);\n      const nameElement = document.createElement(\"td\");\n      nameElement.textContent = row.displayname;\n      rowElement.appendChild(nameElement);\n      const pointElement = document.createElement(\"td\");\n      pointElement.textContent = row.points;\n      rowElement.appendChild(pointElement);\n      return rowElement;\n    });\n    if(response.data.data.users.length == 0) {\n      leaderboard_container.innerHTML = \"No one has completed any puzzles yet!\";\n    } else {\n      table.innerHTML = rows.map((row) => row.outerHTML).join(\"\");\n    }\n  })\n   .catch((error => {console.log(error);}))\n}\n\nfunction getUserStatus() {\n\n  axios.get(\n    \"http://localhost:3000/user/status\",\n    {\n      headers: {'Access-Control-Allow-Origin': '*'}\n    }\n  ).then((response) => {\n    const table = document.querySelector(\"#status-table-data\");\n    console.log(response.data.data);\n    const rows = response.data.data.user.puzzlesCompleted.map((data, index) => {\n      const rowElement = document.createElement(\"tr\");\n      const puzzleElement = document.createElement(\"td\");\n      const linkElement = document.createElement(\"a\");\n      linkElement.href = data.puzzle.host;\n      linkElement.textContent = data.puzzle.title\n      puzzleElement.appendChild(linkElement);\n      rowElement.appendChild(puzzleElement);\n\n      const dateElement = document.createElement(\"td\");\n      dateElement.textContent = formatDate(new Date(data.date));\n      rowElement.appendChild(dateElement);\n\n      const pointElement = document.createElement(\"td\");\n      pointElement.textContent = data.puzzle.points;\n      rowElement.appendChild(pointElement);\n      return rowElement;\n    });\n    table.innerHTML = rows.map((row) => row.outerHTML).join(\"\");\n    user_field = document.querySelector(\"#name-container\");\n    user_points_field = document.querySelector(\"#user-points\");\n    user_field.innerHTML = 'Welcome, ' + response.data.data.user.name;\n    user_points_field.innerHTML = response.data.data.user.points;\n  })\n   .catch((error => {console.log(error);}))\n}\n\nwindow.onload = function() {\n  getLeaderboard();\n  getUserStatus();\n};\n\n\n\n\n"]}